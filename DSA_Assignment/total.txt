import java.util.*;

public class Solution {

   public static boolean canWin(int leap, int[] game) {
    return Solvable( leap, game, 0);    
}

public static boolean Solvable (int leap, int[] game, int i){
    if ( i >= game.length){
        return true;
    }
    if ( i<0 || game[i] ==1){
        return false;
    }
    game[i] = 1;

    return Solvable(leap, game, i + leap) || Solvable(leap, game, i + 1) || Solvable(leap, game, i - 1);
}

public static void main(String[] args) {
    Scanner ip = new Scanner(System.in);
    int q = ip.nextInt();
    while (q-- > 0) {
        int n = ip.nextInt();
        int leap = ip.nextInt();

        int[] game = new int[n];
        for (int i = 0; i < n; i++) {
            game[i] = ip.nextInt();
        }

        System.out.println( (canWin(leap, game)) ? "YES" : "NO" );
    }
    ip.close();
}
}
-----------------------------------------------------------------------------------------------------------------------------
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        for (int i = 0; i < 6; i++) {
            String[] RowTempItems = buf.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> RowItems = new ArrayList<>();

            for (int j = 0; j < 6; j++) {
                int Item = Integer.parseInt(RowTempItems[j]);
                RowItems.add(Item);
            }

            arr.add(RowItems);
        }
          int sum=Integer.MIN_VALUE;
    int temp=0;
    for (int i=1;i<5;i++){
        for (int j=1;j<5;j++){
            temp=arr.get(i).get(j)+arr.get(i-1).get(j-1)+arr.get(i-1).get(j)+arr.get(i-1).get(j+1)+arr.get(i+1).get(j-1)+arr.get(i+1).get(j)+arr.get(i+1).get(j+1);
            if(temp>sum){
            sum=temp;
            }
        }


    }
    System.out.println(sum);

        buf.close();
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
import java.text.*;

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();
          String us = NumberFormat.getCurrencyInstance(Locale.US).format(payment); String india = NumberFormat.getCurrencyInstance(new Locale("en", "in")).format(payment); String china = NumberFormat.getCurrencyInstance(Locale.CHINA).format(payment);
           String france = NumberFormat.getCurrencyInstance(Locale.FRANCE).format(payment);
        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------
